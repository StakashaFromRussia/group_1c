
// Процедура - Выполняет запуск информационной базы на клиенте
//
// Параметры:
//  ИнформационнаяБаза	 - СправочникСсылка.ИнформационныеБаза - Запускаемая информационная база
//  ПараметрЗапуска		 - Строка	 - содержит параметр запуска командной строки config || enterprise
//
Процедура ВыполнитьЗапускИнформационнойБазы(ИнформационнаяБаза, ПараметрЗапуска) Экспорт 

	ПараметрыЗапускаИнформационнойБазы = ОбщегоНазначенияВызовСервера.ПолучитьПараметрыЗапускаИнформационнойБазы(ИнформационнаяБаза);
	
	ВерсияПлатформы	= ПараметрыЗапускаИнформационнойБазы.ВерсияПлатформы;
	Сервер			= ПараметрыЗапускаИнформационнойБазы.Сервер;
	ИмяБазы			= ПараметрыЗапускаИнформационнойБазы.ИмяФайла;
	Логин			= ПараметрыЗапускаИнформационнойБазы.Логин;
	Пароль			= ПараметрыЗапускаИнформационнойБазы.Пароль;
	КодРазрешения	= "/uc 14429";
	
	ТекстКоманды = """C:\Program Files\1cv8\" + ВерсияПлатформы + "\bin\1cv8.exe"" " + ПараметрЗапуска + " /S " + Сервер + "\" + ИмяБазы + " /N" + Логин + " /P" + Пароль + " " + КодРазрешения + Символы.ПС;
	
	ЗапуститьПриложение(ТекстКоманды);

КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

// Процедура - Выполнить обновление информационной базы
//
// Параметры:
//  МассивИнформационныхБаз	 - Массив - содержит массив ссылок на информационные базы, которые необходимо обновить
//
Процедура ВыполнитьОбновлениеИнформационнойБазы(МассивИнформационныхБаз) Экспорт 

	//Сначала предупредим о том, что необходимо выгнать пользователей и сделать БЭКАП
	ТекстВопроса = "Перед началом обновления необходимо запретить работу пользователей в базе, а также сделать бэкап.
	|Выполнить обновление информационной базы?";
	ОписаниеОповещения = Новый ОписаниеОповещения("ПродолжитьОбновлениеИнформационнойБазы", ОбщегоНазначенияКлиент, Новый Структура("МассивИнформационныхБаз", МассивИнформационныхБаз));
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 120,, "Внимание!");

КонецПроцедуры

Процедура ПродолжитьОбновлениеИнформационнойБазы(РезультатВопроса, ДополнительныеПараметры) Экспорт 

	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		//Не обновляем, дополнительных действий не требуется
		Возврат;
	КонецЕсли;

	МассивИнформационныхБаз = ДополнительныеПараметры.МассивИнформационныхБаз;
	Для каждого ИнформационнаяБаза Из МассивИнформационныхБаз Цикл
		ПроизвестиОбновлениеИнформационнойБазы(ИнформационнаяБаза);
	КонецЦикла;
КонецПроцедуры

Процедура ПроизвестиОбновлениеИнформационнойБазы(ИнформационнаяБаза)

	ЭтоГруппа = ОбщегоНазначенияВызовСервера.ЭтоГруппыИнформационнойБазы(ИнформационнаяБаза);
	Если ЭтоГруппа Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо выбрать информационную базу";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ПолноеИмяФайла = КаталогВременныхФайлов() + "Update_base.bat";
	
	МассивВерсий = ОбщегоНазначенияВызовСервера.ВыбратьРелизДляУстановки(ИнформационнаяБаза);
	
	Для каждого Версия Из МассивВерсий Цикл
		Если Версия = "" Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не удалось выбрать необходимый релиз для установки";
			Сообщение.Сообщить();
			Прервать;
		КонецЕсли;
		Версия = СтрЗаменить(Версия, ".", "_");
		ТекстКоманды = ОбщегоНазначенияВызовСервера.ПодготовитьТекстКомандыОбновленияИнформационнойБазы(ИнформационнаяБаза, "CONFIG", Версия);
		Если ТекстКоманды = "" Тогда
			Прервать;
		КонецЕсли;
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.ДобавитьСтроку(ТекстКоманды);
		ТекстовыйДокумент.Записать(ПолноеИмяФайла, КодировкаТекста.ANSI);
		//ЗапуститьПриложение(ПолноеИмяФайла,, Истина); //ждем завершения
		ЗапуститьПриложение(ПолноеИмяФайла);
		
		ПодключитьОбработчикОжидания("ПодключаемыйПроверитьУспешностьВыполненияОперации", 30);
		
		//Необходима проверка успешности обновления
		//"Обновление конфигурации успешно завершено" в конце файла
		
		//Запускаем ручками пока что
		//ТекстКоманды = ОбщегоНазначенияВызовСервера.ПодготовитьТекстКомандыОбновленияИнформационнойБазы(ИнформационнаяБаза, "enterprise", Версия);
		//ТекстовыйДокумент = Новый ТекстовыйДокумент;
		//ТекстовыйДокумент.ДобавитьСтроку(ТекстКоманды);
		//ТекстовыйДокумент.Записать(ПолноеИмяФайла, КодировкаТекста.ANSI);
		//ЗапуститьПриложение(ПолноеИмяФайла,, Истина);
		
		Прервать;	//Пока что будем обновлять только на одну версию
	КонецЦикла;
	
	Если НЕ МассивВерсий.Количество() = 0 Тогда
		//Необходимо обновить информацию о ИБ
		ОбщегоНазначенияВызовСервера.ОбновитьСписокИБНаСервере(ИнформационнаяБаза);
	КонецЕсли;

КонецПроцедуры

Процедура ПодключаемыйПроверитьУспешностьВыполненияОперации() Экспорт 

	

КонецПроцедуры

#КонецОбласти

#Область УстановкаСнятиеБлокировки

Процедура ВыполнитьПослеУстановкиСнятияБлокировки(Результат, Параметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Выполнена Тогда
		Для каждого База Из Параметры.МассивБаз Цикл
			Если Параметры.УстановкаСнятиеБлокировки Тогда
				Сообщить("Установлена блокировка: " + База);
			Иначе 
				Сообщить("Снята блокировка: " + База);
			КонецЕсли;
		КонецЦикла;
	Иначе
		ТекстОшибки = "";
		Если Результат.Свойство("Ошибка", ТекстОшибки) Тогда
			Сообщить(ТекстОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти