
&НаКлиенте
Процедура ПрочитатьМетаданные(Команда)
	ПрочитатьМетаданныеНаСервере(ИнформационнаяБаза);
КонецПроцедуры

&НаСервере
Процедура ПрочитатьМетаданныеНаСервере(ИнформационнаяБаза)
	
	Подключение = ОбщегоНазначенияКлиентСервер.ВыполнитьПодключениеКБазе(ИнформационнаяБаза);
	
	Если Подключение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеБазы = Подключение.Метаданные;
	
	//ТаблицаСтруктурыБазыДанных = ПолучитьСтруктуруХраненияБазыДанных();
	ТаблицаСтруктурыБазыДанных = Подключение.ПолучитьСтруктуруХраненияБазыДанных();
	ТаблицаСтруктурыБазыДанных.Свернуть("Назначение, Метаданные");
	
	ТаблицаМетаданных = Новый ТаблицаЗначений;
	ТаблицаМетаданных.Колонки.Добавить("ТипМетаданных");
	ТаблицаМетаданных.Колонки.Добавить("ОбъектМетаданных");
	                              
	Для каждого СтрокаТЧ Из ТаблицаСтруктурыБазыДанных Цикл
		
		Если НЕ (СтрокаТЧ.Назначение = "Основная" ИЛИ СтрокаТЧ.Назначение = "Константа") ИЛИ СтрокаТЧ.Метаданные = "" Тогда
			Продолжить;
		КонецЕсли;
		МассивСтрок = ОбщегоНазначенияКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаТЧ.Метаданные, ".");
		Если МассивСтрок.Количество() = 2 Тогда
			ТипМетаданных = МассивСтрок[0];
			ОбъектМетаданных = МассивСтрок[1];
			НоваяСтрока = ТаблицаМетаданных.Добавить();
			НоваяСтрока.ТипМетаданных = ТипМетаданных;
			НоваяСтрока.ОбъектМетаданных = ОбъектМетаданных;
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не понятный тип структуры базы. " + СтрокаТЧ.Метаданные);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаМетаданных.Сортировать("ТипМетаданных, ОбъектМетаданных");
	
	ТаблицаТиповМетаданных = ТаблицаМетаданных.Скопировать(, "ТипМетаданных");
	ТаблицаТиповМетаданных.Свернуть("ТипМетаданных");
	
	ДеревоМетаданных = ДанныеФормыВЗначение(ДеревоСтруктуры, Тип("ДеревоЗначений"));
	
	ПерваяСтрока = ДеревоМетаданных.Строки.Добавить();
	ПерваяСтрока.Метаданные = "Метаданные";
	Для каждого СтрокаТипа Из ТаблицаТиповМетаданных Цикл
		СтрокаДерева = ПерваяСтрока.Строки.Добавить();
		СтрокаДерева.ТипМетаданных = СтрокаТипа.ТипМетаданных;
		СтрокаДерева.Метаданные = СтрокаТипа.ТипМетаданных;
		МассивОбъектовМетаданных = ТаблицаМетаданных.НайтиСтроки(Новый Структура("ТипМетаданных", СтрокаТипа.ТипМетаданных));
		Для каждого СтрокаОбъекта Из МассивОбъектовМетаданных Цикл
			Подстрока = СтрокаДерева.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(Подстрока, СтрокаОбъекта);
			Подстрока.Метаданные = СтрокаОбъекта.ОбъектМетаданных;
		КонецЦикла;
	КонецЦикла;
	
	//КритерииОтбора
	СтрокаДерева = ПерваяСтрока.Строки.Добавить();
	СтрокаДерева.Метаданные = "КритерииОтбора";
	Для каждого КритерийОтбора Из МетаданныеБазы.КритерииОтбора Цикл
		Подстрока = СтрокаДерева.Строки.Добавить();
		Подстрока.Метаданные = КритерийОтбора.Имя;
	КонецЦикла;
	
	//ПодпискиНаСобытия
	СтрокаДерева = ПерваяСтрока.Строки.Добавить();
	СтрокаДерева.Метаданные = "ПодпискиНаСобытия";
	Для каждого КритерийОтбора Из МетаданныеБазы.ПодпискиНаСобытия Цикл
		Подстрока = СтрокаДерева.Строки.Добавить();
		Подстрока.Метаданные = КритерийОтбора.Имя;
	КонецЦикла;
	
	//ОпределяемыеТипы
	СтрокаДерева = ПерваяСтрока.Строки.Добавить();
	СтрокаДерева.Метаданные = "ОпределяемыеТипы";
	Для каждого КритерийОтбора Из МетаданныеБазы.ОпределяемыеТипы Цикл
		Подстрока = СтрокаДерева.Строки.Добавить();
		Подстрока.Метаданные = КритерийОтбора.Имя;
	КонецЦикла;
	
	//ОбщиеКоманды
	СтрокаДерева = ПерваяСтрока.Строки.Добавить();
	СтрокаДерева.Метаданные = "ОбщиеКоманды";
	Для каждого КритерийОтбора Из МетаданныеБазы.ОбщиеКоманды Цикл
		Подстрока = СтрокаДерева.Строки.Добавить();
		Подстрока.Метаданные = КритерийОтбора.Имя;
	КонецЦикла;
	
	ЗначениеВДанныеФормы(ДеревоМетаданных, ДеревоСтруктуры);
	
КонецПроцедуры
